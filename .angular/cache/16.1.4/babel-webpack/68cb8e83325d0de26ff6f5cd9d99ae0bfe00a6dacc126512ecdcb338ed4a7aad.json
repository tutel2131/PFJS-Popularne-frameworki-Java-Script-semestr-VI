{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class NewsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://filmix-80ef5-default-rtdb.firebaseio.com/news.json';\n  }\n  getNews() {\n    return this.http.get(this.apiUrl);\n  }\n}\nNewsService.ɵfac = function NewsService_Factory(t) {\n  return new (t || NewsService)(i0.ɵɵinject(i1.HttpClient));\n};\nNewsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NewsService,\n  factory: NewsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["NewsService","constructor","http","apiUrl","getNews","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Skyr\\Desktop\\Filmixx-master\\Filmixx-master\\filmix-frontend\\filmix\\src\\services\\news.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { News } from \"src/app/models/news.model\";\n\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n  export class NewsService {\n    private apiUrl = 'https://filmix-80ef5-default-rtdb.firebaseio.com/news.json'; \n\n    constructor(private http: HttpClient) {}\n    \n    getNews() {\n        return this.http.get<News[]>(this.apiUrl);\n      }\n\n  }\n"],"mappings":";;AASE,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,4DAA4D;EAEtC;EAEvCC,OAAOA,CAAA;IACH,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACF,MAAM,CAAC;EAC3C;;AAPSH,WAAW,C;mBAAXA,WAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXT,WAAW,C;SAAXA,WAAW;EAAAU,OAAA,EAAXV,WAAW,CAAAW,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}