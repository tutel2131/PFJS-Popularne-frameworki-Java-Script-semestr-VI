{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/films.service\";\nexport class OrganizingVideos {\n  constructor(route, filmsService) {\n    this.route = route;\n    this.filmsService = filmsService;\n    //public serialData: VideoContent[] = [];\n    //public movieData: VideoContent[] = [];\n    this.movieData = new BehaviorSubject([]);\n    this.serialData = new BehaviorSubject([]);\n    this.getVideoData();\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const videoTitle = params['title'];\n      const videoDesc = params['description'];\n      const duration = params['duration'];\n      const releaseDate = params['releaseDate'];\n      this.getVideoData();\n    });\n  }\n  getVideoData() {\n    console.log('getVideoData start');\n    this.filmsService.getFilms().subscribe(data => {\n      const assignedType = this.filmsService.assignType(data);\n      this.movieData.next(assignedType.filter(video => video.type === 'film'));\n      this.serialData.next(assignedType.filter(video => video.type === 'serial'));\n      //this.movieData = assignedType.filter(video => video.type === 'film');\n      //this.serialData= assignedType.filter(video => video.type==='serial');\n      console.log(this.movieData);\n      console.log(this.serialData);\n    }, error => {\n      console.error('Error fetching films:', error);\n    });\n    console.log('getVideoData ends');\n  }\n  // getMovies(): VideoContent[] {\n  //  return this.movieData;\n  // }\n  // getSerials(): VideoContent[] {\n  // return this.serialData;\n  // Metoda do dostępu do obiektu BehaviorSubject jako Observable\n  getMovies() {\n    return this.movieData.asObservable();\n  }\n  getSerials() {\n    return this.serialData.asObservable();\n  }\n}\nOrganizingVideos.ɵfac = function OrganizingVideos_Factory(t) {\n  return new (t || OrganizingVideos)(i0.ɵɵinject(i1.ActivatedRoute), i0.ɵɵinject(i2.FilmsService));\n};\nOrganizingVideos.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrganizingVideos,\n  factory: OrganizingVideos.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","OrganizingVideos","constructor","route","filmsService","movieData","serialData","getVideoData","ngOnInit","params","subscribe","videoTitle","videoDesc","duration","releaseDate","console","log","getFilms","data","assignedType","assignType","next","filter","video","type","error","getMovies","asObservable","getSerials","i0","ɵɵinject","i1","ActivatedRoute","i2","FilmsService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Skyr\\Desktop\\Filmixx-master\\Filmixx-master\\filmix-frontend\\filmix\\src\\app\\models\\video.content.ts"],"sourcesContent":["import { Component, Injectable, OnInit } from '@angular/core';\nimport { FilmsService } from '../../services/films.service';\nimport { ActivatedRoute } from '@angular/router';\nimport {VideoContent} from '../models/video-content.model';\nimport { Actor } from '../models/video-content.model';\nimport { ActorMovie } from '../models/video-content.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n  })\n  \nexport class OrganizingVideos implements OnInit {\n    \n    \n\n  //public serialData: VideoContent[] = [];\n  //public movieData: VideoContent[] = [];\n  private movieData: BehaviorSubject<VideoContent[]> = new BehaviorSubject<VideoContent[]>([]);\n  private serialData: BehaviorSubject<VideoContent[]> = new BehaviorSubject<VideoContent[]>([]);\n \n\n  constructor(\n    private route: ActivatedRoute,\n     private filmsService: FilmsService,\n     \n  ) {  this.getVideoData();}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      const videoTitle = params['title']; \n      const videoDesc= params['description'];\n      const duration = params['duration'];\n      const releaseDate= params['releaseDate'];\n      this.getVideoData();\n    });\n  }\n\n  getVideoData(): void {\n    console.log('getVideoData start');\n    this.filmsService.getFilms().subscribe( data => {\n\n      const assignedType= this.filmsService.assignType(data);\n      this.movieData.next(assignedType.filter(video => video.type === 'film'));\n      this.serialData.next(assignedType.filter(video => video.type === 'serial'));\n      //this.movieData = assignedType.filter(video => video.type === 'film');\n      //this.serialData= assignedType.filter(video => video.type==='serial');\n      console.log(this.movieData);\n      console.log(this.serialData);\n      \n    },\n    error => {\n      console.error('Error fetching films:', error);\n    }\n\n\n  );\n  console.log('getVideoData ends');  \n  }\n // getMovies(): VideoContent[] {\n  //  return this.movieData;\n // }\n\n // getSerials(): VideoContent[] {\n   // return this.serialData;\n    // Metoda do dostępu do obiektu BehaviorSubject jako Observable\n  getMovies(): Observable<VideoContent[]> {\n    return this.movieData.asObservable();\n  }\n\n  getSerials(): Observable<VideoContent[]> {\n    return this.serialData.asObservable();\n  }\n  }\n  \n\n \n  \n\n\n\n\n\n\n\n  \n"],"mappings":"AAMA,SAASA,eAAe,QAAQ,MAAM;;;;AAOtC,OAAM,MAAOC,gBAAgB;EAU3BC,YACUC,KAAqB,EACpBC,YAA0B;IAD3B,KAAAD,KAAK,GAALA,KAAK;IACJ,KAAAC,YAAY,GAAZA,YAAY;IARvB;IACA;IACQ,KAAAC,SAAS,GAAoC,IAAIL,eAAe,CAAiB,EAAE,CAAC;IACpF,KAAAM,UAAU,GAAoC,IAAIN,eAAe,CAAiB,EAAE,CAAC;IAOxF,IAAI,CAACO,YAAY,EAAE;EAAC;EAEzBC,QAAQA,CAAA;IACN,IAAI,CAACL,KAAK,CAACM,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,MAAME,UAAU,GAAGF,MAAM,CAAC,OAAO,CAAC;MAClC,MAAMG,SAAS,GAAEH,MAAM,CAAC,aAAa,CAAC;MACtC,MAAMI,QAAQ,GAAGJ,MAAM,CAAC,UAAU,CAAC;MACnC,MAAMK,WAAW,GAAEL,MAAM,CAAC,aAAa,CAAC;MACxC,IAAI,CAACF,YAAY,EAAE;IACrB,CAAC,CAAC;EACJ;EAEAA,YAAYA,CAAA;IACVQ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC,IAAI,CAACZ,YAAY,CAACa,QAAQ,EAAE,CAACP,SAAS,CAAEQ,IAAI,IAAG;MAE7C,MAAMC,YAAY,GAAE,IAAI,CAACf,YAAY,CAACgB,UAAU,CAACF,IAAI,CAAC;MACtD,IAAI,CAACb,SAAS,CAACgB,IAAI,CAACF,YAAY,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,MAAM,CAAC,CAAC;MACxE,IAAI,CAAClB,UAAU,CAACe,IAAI,CAACF,YAAY,CAACG,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAK,QAAQ,CAAC,CAAC;MAC3E;MACA;MACAT,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,SAAS,CAAC;MAC3BU,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,UAAU,CAAC;IAE9B,CAAC,EACDmB,KAAK,IAAG;MACNV,OAAO,CAACU,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAGF;IACDV,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAChC;EACD;EACC;EACD;EAEA;EACE;EACC;EACFU,SAASA,CAAA;IACP,OAAO,IAAI,CAACrB,SAAS,CAACsB,YAAY,EAAE;EACtC;EAEAC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACtB,UAAU,CAACqB,YAAY,EAAE;EACvC;;AA5DW1B,gBAAgB,C;mBAAhBA,gBAAgB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,YAAA;AAAA;AAAhBjC,gBAAgB,C;SAAhBA,gBAAgB;EAAAkC,OAAA,EAAhBlC,gBAAgB,CAAAmC,IAAA;EAAAC,UAAA,EAHb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}