{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/films.service\";\nimport * as i3 from \"../../services/actors.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../landing-page/navigation/navigation.component\";\nimport * as i6 from \"../landing-page/footer/footer.component\";\nfunction MovieDetailsComponent_div_2_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Liczba odcink\\u00F3w: \", ctx_r1.movieData.episodes, \"\");\n  }\n}\nfunction MovieDetailsComponent_div_2_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const actorMovie_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", actorMovie_r3.actor == null ? null : actorMovie_r3.actor.firstName, \" \", actorMovie_r3.actor == null ? null : actorMovie_r3.actor.lastName, \" - Rola: \", actorMovie_r3.roleName || \"Brak informacji o roli\", \" \");\n  }\n}\nfunction MovieDetailsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"img\", 2);\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, MovieDetailsComponent_div_2_ng_container_10_Template, 3, 1, \"ng-container\", 1);\n    i0.ɵɵelementStart(11, \"h2\");\n    i0.ɵɵtext(12, \"Obsada:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"ul\");\n    i0.ɵɵtemplate(14, MovieDetailsComponent_div_2_li_14_Template, 2, 3, \"li\", 3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.movieData.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r0.movieData.imageURL, i0.ɵɵsanitizeUrl)(\"alt\", ctx_r0.movieData.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.movieData.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Czas trwania: \", ctx_r0.movieData.duration, \" minut\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Rok wydania: \", ctx_r0.movieData.releaseDate, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.movieData.type === \"serial\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.movieData.actorMovieDtoList);\n  }\n}\nexport class MovieDetailsComponent {\n  constructor(route, filmsService, actorsService) {\n    this.route = route;\n    this.filmsService = filmsService;\n    this.actorsService = actorsService;\n    this.movieData = {};\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      const movieTitle = params['title'];\n      this.getMovieData(movieTitle);\n    });\n  }\n  getMovieData(movieTitle) {\n    this.filmsService.getFilms().subscribe(data => {\n      const assignedType = this.filmsService.assignType(data);\n      this.movieData = assignedType.find(movie => movie.title === movieTitle);\n      this.actorsService.getActors().subscribe(actors => {\n        console.log('Actors:', actors);\n        this.movieData.actorMovieDtoList.forEach(actorMovie => {\n          console.log('actorMovie:', actorMovie);\n          const correspondingActor = actors[actorMovie.actorId];\n          if (correspondingActor) {\n            actorMovie.actor = correspondingActor;\n            console.log('Assigned Actor:', actorMovie.actor);\n          }\n        });\n      });\n    }, error => {\n      console.error('Błąd podczas pobierania danych filmu:', error);\n    });\n  }\n}\nMovieDetailsComponent.ɵfac = function MovieDetailsComponent_Factory(t) {\n  return new (t || MovieDetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FilmsService), i0.ɵɵdirectiveInject(i3.ActorsService));\n};\nMovieDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MovieDetailsComponent,\n  selectors: [[\"app-movie-details\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[1, \"styling\"], [4, \"ngIf\"], [3, \"src\", \"alt\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function MovieDetailsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-navigation\");\n      i0.ɵɵelementStart(1, \"div\", 0);\n      i0.ɵɵtemplate(2, MovieDetailsComponent_div_2_Template, 15, 8, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"app-footer\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.movieData);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.NavigationComponent, i6.FooterComponent],\n  styles: [\".styling[_ngcontent-%COMP%] \\n{\\n    color: wheat;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdHYtc2VyaWVzLWRldGFpbHMvbW92aWUtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuc3R5bGluZyBcbntcbiAgICBjb2xvcjogd2hlYXQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","movieData","episodes","ɵɵtextInterpolate3","actorMovie_r3","actor","firstName","lastName","roleName","ɵɵelement","ɵɵtemplate","MovieDetailsComponent_div_2_ng_container_10_Template","MovieDetailsComponent_div_2_li_14_Template","ɵɵtextInterpolate","ctx_r0","title","ɵɵproperty","imageURL","ɵɵsanitizeUrl","description","duration","releaseDate","type","actorMovieDtoList","MovieDetailsComponent","constructor","route","filmsService","actorsService","ngOnInit","params","subscribe","movieTitle","getMovieData","getFilms","data","assignedType","assignType","find","movie","getActors","actors","console","log","forEach","actorMovie","correspondingActor","actorId","error","ɵɵdirectiveInject","i1","ActivatedRoute","i2","FilmsService","i3","ActorsService","selectors","decls","vars","consts","template","MovieDetailsComponent_Template","rf","ctx","MovieDetailsComponent_div_2_Template"],"sources":["C:\\Users\\Skyr\\Desktop\\Filmixx-master\\Filmixx-master\\filmix-frontend\\filmix\\src\\app\\tv-series-details\\movie-details.component.ts","C:\\Users\\Skyr\\Desktop\\Filmixx-master\\Filmixx-master\\filmix-frontend\\filmix\\src\\app\\tv-series-details\\movie-details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FilmsService } from '../../services/films.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ActorsService } from '../../services/actors.service'; // Popraw ścieżkę importu\nimport { Actor, ActorMovie } from '../models/video-content.model'; // Popraw ścieżkę importu\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.css']\n})\nexport class MovieDetailsComponent implements OnInit {\n\n  movieData: any = {};\n\n  constructor(\n    private route: ActivatedRoute,\n    private filmsService: FilmsService,\n    private actorsService: ActorsService\n  ) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      const movieTitle = params['title'];\n      this.getMovieData(movieTitle);\n    });\n  }\n\n  getMovieData(movieTitle: string): void {\n    this.filmsService.getFilms().subscribe(\n      data => {\n        const assignedType = this.filmsService.assignType(data);\n        this.movieData = assignedType.find((movie: any) => movie.title === movieTitle);\n        \n        this.actorsService.getActors().subscribe((actors: Actor[]) => {\n          console.log('Actors:', actors);\n        \n          this.movieData.actorMovieDtoList.forEach((actorMovie: ActorMovie) => {\n            console.log('actorMovie:', actorMovie);\n            const correspondingActor = actors[actorMovie.actorId];\n          \n            \n            if (correspondingActor) {\n              actorMovie.actor = correspondingActor;\n              console.log('Assigned Actor:', actorMovie.actor);\n            }\n          });\n        });\n      },\n      error => {\n        console.error('Błąd podczas pobierania danych filmu:', error);\n      }\n    );\n  }\n}\n","<app-navigation></app-navigation>\n\n\n<div class=\"styling\">\n\n<div *ngIf=\"movieData\">\n  <h1>{{ movieData.title }}</h1>\n  <img [src]=\"movieData.imageURL\" [alt]=\"movieData.title\">\n  <p>{{movieData.description}}</p>\n  <p>Czas trwania: {{movieData.duration}} minut</p>\n  <p>Rok wydania: {{movieData.releaseDate}}</p>\n  <ng-container *ngIf=\"movieData.type === 'serial'\">\n    <p>Liczba odcinków: {{ movieData.episodes }}</p>\n  </ng-container>\n  \n\n  <h2>Obsada:</h2>\n  <ul>\n    <li *ngFor=\"let actorMovie of movieData.actorMovieDtoList\">\n      {{ actorMovie.actor?.firstName }} {{ actorMovie.actor?.lastName }} - Rola: {{ actorMovie.roleName || 'Brak informacji o roli' }}\n    </li>\n    \n  </ul>\n</div>\n\n\n</div>\n\n\n<app-footer></app-footer>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}